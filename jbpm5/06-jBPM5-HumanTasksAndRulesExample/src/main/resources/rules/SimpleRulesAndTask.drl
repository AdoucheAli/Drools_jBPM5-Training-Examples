package com.wordpress.salaboy.humantasks;

import org.jbpm.task.Task;
import org.jbpm.task.User;
import com.wordpress.salaboy.*;
import com.wordpress.salaboy.model.events.*;


declare PulseEvent
    @role( event)
    @expires (10s)
end

query "getAverage" ()
    $currentAverage: Average()
end

rule "Update the Average"
    no-loop true
    when
     $currentAverage: Average()
     $average: Number() from accumulate(
            PulseEvent($value: value) over window:time(5s) from entry-point "pulse-events" 
             average($value))
    then
        $currentAverage.setValue((Double)$average);
        update($currentAverage);
        
end

rule "Meausure Pulse Event Average and react if threshold is breached"
    no-loop true
    when
        not(ThresholdBreached())
        $average: Number() from accumulate(
            $acc: PulseEvent($value: value) over window:time(5s) from entry-point "pulse-events" 
             average($value))
        $task: Task()
        $threshold: Threshold(name == "AverageThreshold", $average > valueUpperThreshold    ||   $average < valueLowerThreshold)
        
    then
        
        System.out.println(">>> WARN: The Threshold "+ $threshold + "was breached by = "+$average);
        System.out.println(">>>  Create a new task!!");
        Task task = TaskClientHelper.getInstance().addTask($task, null);
        $task.setId(task.getId());
        update($task);
        insert(new ThresholdBreached(task.getId()));
end


rule "If the threshold was breached buy now the average returns to normal cancel the task that was created"
    no-loop true
    when
         $task: Task()
        $thresholdBreached: ThresholdBreached(taskId == $task.id)
        $average: Double() from accumulate(
            $acc: PulseEvent($value: value) over window:time(5s) from entry-point "pulse-events" 
             average($value))
       
        $user: User()
        $threshold: Threshold(name == "AverageThreshold",  valueUpperThreshold > $average &&   valueLowerThreshold < $average )
        
    then
        
        System.out.println(">>> WARN: The Threshold "+ $threshold + "now is inside normal values by = "+$average);
        System.out.println(">>>  Task Not Needed Any More!");
        System.out.println(">>> Remote task!!");
        TaskClientHelper.getInstance().forward($task, $user);
        retract($thresholdBreached);
        retract($task);
end


